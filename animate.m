clc;clear all;close all;% Initial parametersCC = [];iter = 100;obs_num = 1;conf = zeros(obs_num, iter);collision = 0;r = 5;noise_samples = 1000;z = 0;vz = 0;bot_Vpath = [];bot_pos = [0; r; z];bot_vel = [0; -1.4; vz];bot_radius = 0.5;bot_rad = 0.5;goal = [0, -r, z];x = linspace(0, 2*pi, obs_num+2);obs_pos = zeros(obs_num, 3);obs_vel = zeros(obs_num, 3) + 0.0001;obs_goals = zeros(obs_num, 3);%obs_radii = 0.4 + abs(0.2*randn(obs_num, 1));obs_radii = [ 0.5];% obs_pos(1, :) = [3, 2, z];% obs_goals(1,:) = [-2; 2; z];% obs_pos(2,:) = [4, -2, z];% obs_goals(2,:) = [4; -2; z];% % for i = 1:obs_num%     obs_pos(i,:) = [r*sin(x(i+1)) r*cos(x(i+1)) z];%     obs_goals(i,:) = [-r*sin(x(i+1)) -r*cos(x(i+1)) z];% endfor i = 1:obs_num    obs_pos(i,:) = [r*sin(x(i+1)) r*cos(x(i+1)) z];    obs_goals(i,:) = [-r*sin(x(i+1)) -r*cos(x(i+1)) z];endobs_pos(1,:) = [-5, 0, z];obs_goals(1,:) = [5; 0; z];% obs_pos(6,:) = [0, -r, z-1.5];% obs_goals(6,:) = [0; r; z-1.5];counter = 1;dt = 1/10;bot_path = [bot_pos];init_pos = [];k = 0;%CHANGE BEGIN for i = 1:obs_num    for j = 1:noise_samples        k = k+1;        init_pos(1, k, :) = [obs_pos(i,:)];    endendobs_path(1,:,:) = [init_pos];%CHANGE ENDfigure();%pause(5);while counter < iter    if counter == 10 || counter == 18         CC = coneView(obs_pos-bot_pos',obs_vel-bot_vel',pos,vel,counter,CC);    end    if sqrt(sum((bot_path(:,counter)-goal').^2)) < 0.5        break;    end    %     for i = 1:obs_num%         dist = sqrt(sum((bot_pos'-obs_pos(i,:)).^2));%         if dist<(bot_rad+obs_radii(i))%             disp('Collision');%             disp(dist);%             break;%         end    %     end        %CHANGE BEGIN    sensor_obs_pos = [];    sensor_obs_vel = [];    sensor_obs_radii = [];    for i = 1:obs_num        if sensorRange(bot_pos, bot_vel, obs_pos(i,:), obs_vel(i,:))            sensor_obs_pos = [sensor_obs_pos; obs_pos(i,:) - bot_pos'];            sensor_obs_vel = [sensor_obs_vel; obs_vel(i,:) - bot_vel'];            sensor_obs_radii = [sensor_obs_radii; obs_radii(i)];        end    end    %CHANGE END    %pos = pearsrnd(0,0.1,0,3,noise_samples,3);    pos = pearsrnd(0,0.2,0.3,1.5,noise_samples,3);    vel = pearsrnd(0,0.1,0.3,1.5,noise_samples,3);    %     mu = [0 0 0;0 0 0;0 0 0];%     sigma = cat(3,[0.3 0 0;0 0.3 0;0 0 0.3],[0.3 0 0;0 0.3 0;0 0 0.3],[0.3 0 0;0 0.3 0;0 0 0.3]);%     gm = gmdistribution(mu,sigma);%     pos = 0.1.*random(gm,noise_samples);        controls = getControls(bot_pos, bot_vel, sensor_obs_pos, sensor_obs_vel, bot_radius, sensor_obs_radii, goal, pos, vel);           w = 1;    if sum((goal'-bot_pos).^2) < 1        w = 0.5 * sum((goal'-bot_pos).^2);    end    bot_vel = w*capVelocity(bot_vel + controls);    bot_pos = bot_pos + dt * bot_vel;        bot_Vpath = [bot_Vpath bot_vel];    bot_path = [bot_path bot_pos];    %clf;    %filledCircle(bot_pos, bot_rad, 1);    %hold on;    %plot3(bot_path(1,:), bot_path(2,:), bot_path(3,:),'LineWidth',2);    for i = 1:obs_num        obs_vel(i,:) = (obs_goals(i,:)-obs_pos(i,:));        obs_vel(i,:) = obs_vel(i,:)/sqrt(sum(obs_vel(i,:).^2));        obs_vel(i,:) = obs_vel(i,:)*1.5;        w = 1;        if sum((obs_goals(i,:)-obs_pos(i,:)).^2) < 1            w = 0.5 * sum((obs_goals(i,:)-obs_pos(i,:)).^2);        end        obs_pos(i,:) = obs_pos(i,:) + w*obs_vel(i,:)*dt;        obs_path(counter+2, i, :) = [obs_pos(i,:)];        %filledCircle(obs_pos(i,:), obs_radii(i), 0);%         for j = 1:noise_samples/50%             obs_path(counter, i, :) = [obs_pos(i,:)];%             filledCircle_shaded(obs_pos(i,:)+pos(j,:), obs_radii(i), 0);%             %plot3(obs_path(:,i,1), obs_path(:,i,2), obs_path(:,i,3), 'b');     %         end           end     %     for i = 1:obs_num%         for j=1:1000%             dist = sum((bot_pos'-(obs_pos(i,:)+pos(j,:))).^2);%             if dist<1%                 conf(i,counter) = conf(i,counter)+1;%             end%         end%     end        %grid on;    %axis([-5 5 -5 5 -5 5]);    % TO SEE THE SIDE VIEW    %view(-90,0)    %TO SEE TOP-VIEW    %view(90,0)    %drawnow;    %saveas(gcf, ['run3/', num2str(counter,'%04.f'), '.png']);    counter = counter + 1;    disp(counter);end%%[d,vivo] = distance(bot_path,bot_Vpath);% % save('v_ivo5.mat','vivo');disp(d);disp(mean(vivo));% %%% disp(sum(conf(1,:)));% disp(sum(conf(2,:)));% disp(sum(conf(3,:)));% disp(sum(conf(4,:)));% disp(sum(conf(5,:)));